#!/usr/bin/env node
/**
 * üîß Script para arreglar el esquema SQLite antes de migraci√≥n
 */

require('dotenv').config();
const dbManager = require('../src/config/database.manager');

async function fixSchema() {
  console.log('üîß Arreglando esquema SQLite...');

  try {
    await dbManager.initialize();

    // Intentar a√±adir columnas faltantes directamente a trav√©s del database manager
    console.log('üìã Verificando y actualizando esquemas...');

    // Para secciones, a√±adir columna orden si no existe
    try {
      await dbManager.db.query("ALTER TABLE secciones ADD COLUMN orden INTEGER DEFAULT 0");
      console.log('‚úÖ Columna orden a√±adida a secciones');
    } catch (error) {
      console.log('‚ö†Ô∏è Columna orden ya existe en secciones');
    }

    // Para paginas, a√±adir columnas faltantes
    const columnasNecesarias = [
      { name: 'orden', sql: 'ALTER TABLE paginas ADD COLUMN orden INTEGER DEFAULT 0' },
      { name: 'estado', sql: 'ALTER TABLE paginas ADD COLUMN estado VARCHAR(50) DEFAULT "publicada"' },
      { name: 'tipo', sql: 'ALTER TABLE paginas ADD COLUMN tipo VARCHAR(50) DEFAULT "pagina"' }
    ];

    for (const columna of columnasNecesarias) {
      try {
        await dbManager.db.query(columna.sql);
        console.log(`‚úÖ Columna ${columna.name} a√±adida a paginas`);
      } catch (error) {
        console.log(`‚ö†Ô∏è Columna ${columna.name} ya existe en paginas`);
      }
    }

    // Actualizar datos existentes
    try {
      await dbManager.db.query(`
        UPDATE paginas
        SET estado = CASE WHEN visible = 1 THEN 'publicada' ELSE 'borrador' END
        WHERE estado IS NULL OR estado = ''
      `);
      console.log('‚úÖ Estados de p√°ginas actualizados');
    } catch (error) {
      console.log('‚ö†Ô∏è Error actualizando estados:', error.message);
    }

    console.log('‚úÖ Esquema SQLite actualizado correctamente');

  } catch (error) {
    console.error('‚ùå Error arreglando esquema:', error);
  } finally {
    if (dbManager.close) {
      await dbManager.close();
    }
  }
}

fixSchema();