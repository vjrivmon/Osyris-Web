{
  "version": "2.0.0",
  "mcps": {
    "github": {
      "enabled": true,
      "description": "GitHub integration for repository management and CI/CD",
      "endpoints": {
        "api": "https://api.github.com/",
        "repo": "https://api.github.com/repos/${GITHUB_REPO}"
      },
      "credentials": {
        "token": "${GITHUB_TOKEN}",
        "repo": "${GITHUB_REPO}"
      },
      "capabilities": [
        "repository_management",
        "branch_operations",
        "pull_request_management",
        "issue_tracking",
        "deployment_status",
        "webhook_management"
      ]
    },

    "hetzner": {
      "enabled": true,
      "description": "Hetzner Cloud server management for production",
      "endpoints": {
        "server": "116.203.98.142",
        "ssh_port": 22
      },
      "credentials": {
        "ssh_key": "${HETZNER_SSH_KEY}",
        "user": "root"
      },
      "capabilities": [
        "server_management",
        "deployment_execution",
        "service_monitoring",
        "log_access",
        "database_management"
      ]
    },

    "filesystem": {
      "enabled": true,
      "description": "Local filesystem operations for development",
      "base_path": "/home/vicente/RoadToDevOps/osyris/Osyris-Web",
      "capabilities": [
        "file_read",
        "file_write",
        "directory_operations",
        "backup_management",
        "log_access"
      ],
      "restrictions": {
        "allowed_paths": [
          "api-osyris/",
          "app/",
          "components/",
          "uploads/",
          "backups/",
          ".claude/",
          "migrations/",
          "scripts/"
        ],
        "forbidden_paths": [
          ".env",
          "node_modules/",
          ".git/"
        ]
      }
    },

    "database_tools": {
      "enabled": true,
      "description": "Database management tools for PostgreSQL (local and production)",
      "development": {
        "type": "postgresql",
        "docker_container": "osyris-db-local",
        "capabilities": [
          "schema_inspection",
          "data_query",
          "backup_creation",
          "migration_execution"
        ]
      },
      "production": {
        "type": "postgresql",
        "docker_container": "osyris-db",
        "server": "116.203.98.142",
        "capabilities": [
          "schema_management",
          "data_operations",
          "performance_monitoring",
          "backup_management"
        ]
      }
    },

    "monitoring": {
      "enabled": true,
      "description": "System monitoring and logging",
      "log_paths": [
        ".claude/logs/",
        "api-osyris/logs/",
        "logs/"
      ],
      "metrics": {
        "performance": true,
        "errors": true,
        "usage": true,
        "deployment": true
      },
      "capabilities": [
        "log_analysis",
        "error_tracking",
        "performance_monitoring",
        "alert_management"
      ]
    },

    "project_memory": {
      "enabled": true,
      "description": "MCP Memory para mantener contexto del proyecto entre sesiones",
      "storage": ".claude/memory/",
      "capabilities": [
        "project_state_tracking",
        "implementation_history",
        "decision_rationale",
        "technical_debt_tracking"
      ]
    },

    "playwright": {
      "enabled": true,
      "description": "Playwright MCP para testing E2E y capturas de pantalla automatizadas",
      "browser": "chromium",
      "headless": true,
      "capabilities": [
        "browser_automation",
        "screenshot_capture",
        "e2e_testing",
        "visual_regression_testing",
        "accessibility_testing"
      ],
      "configuration": {
        "viewport": {
          "width": 1280,
          "height": 720
        },
        "timeout": 30000,
        "screenshot_directory": "screenshots/",
        "video_directory": "videos/"
      },
      "test_environments": {
        "local": "http://localhost:3000",
        "staging": "http://localhost:3000",
        "production": "https://osyris.grupoosyris.es"
      }
    }
  },

  "integration_workflows": {
    "local_to_production": {
      "description": "Deploy from local development to Hetzner production",
      "steps": [
        "filesystem.backup_current_state",
        "database_tools.create_backup",
        "github.push_to_main",
        "github.trigger_action",
        "hetzner.deploy_via_github_action",
        "monitoring.track_deployment"
      ]
    },

    "production_to_local": {
      "description": "Sync production data to local for debugging",
      "steps": [
        "hetzner.export_database",
        "database_tools.import_to_local",
        "hetzner.download_uploads",
        "filesystem.organize_local_files",
        "monitoring.log_sync_operation"
      ]
    },

    "schema_migration": {
      "description": "Apply database schema changes",
      "steps": [
        "database_tools.extract_local_schema",
        "database_tools.compare_with_production",
        "database_tools.generate_migration",
        "hetzner.apply_migration",
        "monitoring.validate_migration"
      ]
    }
  },

  "error_handling": {
    "retry_policies": {
      "network_errors": {
        "max_retries": 3,
        "backoff": "exponential",
        "base_delay": 1000
      },
      "api_rate_limits": {
        "max_retries": 5,
        "backoff": "linear",
        "base_delay": 5000
      }
    },

    "fallback_strategies": {
      "hetzner_unavailable": "notify_admin_and_wait",
      "github_action_failed": "manual_deployment_instructions",
      "github_api_down": "use_local_git_operations"
    }
  },

  "security": {
    "credential_management": {
      "use_environment_variables": true,
      "encrypt_stored_credentials": true,
      "rotate_credentials_regularly": true
    },

    "access_control": {
      "validate_permissions": true,
      "audit_all_operations": true,
      "restrict_sensitive_operations": true
    }
  },

  "performance": {
    "connection_pooling": true,
    "request_caching": true,
    "batch_operations": true,
    "parallel_requests": {
      "max_concurrent": 10,
      "queue_size": 100
    }
  }
}
